%fieldset
  -if @link_categories.blank?
    = link_to("Please create at least one category before trying to save.", admin_link_categories_path, :class => "required", :style => "color: #AC0000")

  = f.error_messages
  #main-details.options
    %h3 Details
    = f.check_box :public
    = f.label :public, "Approve for public viewing"
    %br
    = f.label :link_category_id, "Category"
    %br
    = f.select :link_category_id, LinkCategory.find(:all).collect {|p| [p.title, p.id]}
    %br
    = f.label :description, "Short Description"
    = render :partial => 'admin/shared/help_tip', :locals =>{:tip_headline => "", :tip_text => "The Short Description is used for the Meta Description and the feature box description of the link."}
    = f.text_area :description, :style => "width: 250px; height: 60px;"
    %br
    = f.label :tag_list, "Tags"
    = f.text_field :tag_list
    .note Separate words or phrases with a comma
  %h2.form-label= f.label :title
  .note
    %span.required *Required
    Title is used to generate the permalink.
  = f.text_field :title, :class => "big", :size => 80

  %h2.form-label= f.label :url
  .note
    %span.required *Required
  = f.text_field :url, :class => "big", :size => 80



  %h2.form-label= f.label :blurb
  = f.text_area :blurb, :size => "80x5", :style => "width: 550px; height: 110px;"

  = clear
  #body-wrapper
    .options#body-details
      .inserts
        %strong Insert:
        %br
        = render :partial => "admin/shared/parser_help"
        - unless @link.title.blank?
          = link_to("#{icon('Picture')} Attached Image", admin_link_images_path(@link, :fancy => "true"), :class => "fancy-iframe")
        = render :partial => "admin/shared/asset_options"
        = render :partial => "admin/shared/insert_map"

    %div{:style => "width: 560px;"}
      %h2.form-label
        = f.label :body

    = f.text_area :body, :size => "100x40", :class => "mceEditor"
    = clear
  - fancy_submit admin_links_path do
    = f.submit "Save #{@cms_config['site_settings']['link_title']}"

- content_for :head do
  :javascript
    function addtext(text) {
    tinyMCE.execInstanceCommand("link_body","mceInsertContent",false,text);
    }