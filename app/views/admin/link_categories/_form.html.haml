= f.error_messages

.responsive-form
  .main-fields
    %h2.form-label= f.label :title
    = f.text_field :title, :class => "big-input", :disabled => @disabled, :placeholder => "Generates the permalink."
    .note.required *Required
    %h2.form-label= f.label :description
    .note Displayed on Link Category page, under Title.
    = f.text_area :description, :class => "big-area"
    - if current_user.is_super_user and !@link_category.permalink.blank?
      %h2.title.form-label= f.label :permalink, "Permalink"
      = f.text_field :permalink, :class => "big-input", :disabled => @no_edit
      .note Modifies permalink.
  #main-details.details.options
    #options
      %dl
        - if @options_for_parent_id
          %dt.form-label= f.label :link_category_id, "Category Placement"
          %dd.form-option
            %select{:name => "link_category[link_category_id]", :id => "link_category_link_category_id", :class => "select"}
              - for o in @options_for_parent_id
                - unless @link_category.id.blank?
                  %option{:value => o[1] , :selected => (@link_category.link_category_id and o[1] == @link_category.link_category_id ? "selected" : nil)}= o[0]
                - else
                  %option{:value => o[1] , :selected => nil}= o[0]
      %dl
        %dt.form-label
          = f.label :main_column_id, "Category Layout"
        %dd.form-option
          = collection_select(:link_category, :main_column_id, @layouts, :id, :title, {:include_blank => "Default Link Page Layout"}, :class => "select")
      %dl
        %dt.form-label
          = f.label :link_main_column_id, "Link Layout"
        %dd.form-option
          = collection_select(:link_category, :link_main_column_id, @layouts, :id, :title, {:include_blank => "Same as Category"}, :class => "select")
      - if @cms_config['modules']['members']
        #permissions-box
          %h2 Permissions
          .note Who can access this Links in this Category?
          %ul
            %li
              =f.radio_button :permission_level, "everyone"
              =f.label :permission_level_everyone, "Everyone"
            %li
              =f.radio_button :permission_level, "administrators"
              =f.label :permission_level_administrators, "Administrators Only"
            %li
              =f.radio_button :permission_level, "those checked"
              =f.label :permission_level_those_checked, "All those checked below"
            %li
              =f.radio_button :permission_level, "except those checked"
              =f.label :permission_level_except_those_checked, "Except for those checked below"
          #permissions-groups
            Select Groups
            %ul
              -for group in PersonGroup.is_role
                %li
                  -if @link_category.permission_level == "except those checked"
                    = check_box_tag "link_category[person_group_ids][]", group.id, !@link_category.person_groups.include?(group), :id => "group_checkbox_#{group.id}"
                  -else 
                    = check_box_tag "link_category[person_group_ids][]", group.id, @link_category.person_groups.include?(group), :id => "group_checkbox_#{group.id}"
                  = label_tag "group_checkbox_#{group.id}", group.title
          %div
            %input{:type => "button", :onclick => "jQuery.fancybox.close()", :value => "Done"}
   

- fancy_submit admin_link_categories_path do
  = f.submit "Save category"
