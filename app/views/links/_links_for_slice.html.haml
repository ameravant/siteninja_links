- cslc = section.link_categories
- categories = []
- for category in cslc
  - categories << category.id
- count = section.count
- if !Link.featured.blank?
  - if section.show_all_categories == true
    - links = Link.featured(:order => :position)[0..(count - 1)]
  - elsif categories.size == 1
    - links = Link.featured(:order => :position).reject{|p| !p.link_category_ids.include?(categories.first)}[0..count-1]
  - else
    - #links = Link.featured.reject{|p| !(p.link_category_id {|pc| categories.include?(pc)})}
    - links = Link.featured(:order => :position).reject{|p| !categories.include?(p.link_category_id) }[0..count-1]

  - if section.section_format.blank?
    %ul.link-list.list_of_links
      - for link in links
        %li.link
          - unless link.images.blank? 
            =link_to image_tag(link.images.first.thumbnail, :title => link.title, :alt => link.title), [link.link_category, link], :class => "link-image"

          %h3=link_to link.name, [link.link_category, link]
  - elsif section.section_format == "custom"
    - template = Liquid::Template.parse(section.section_layout)
    = template.render( 'link_list' => links.sort_by(&:position), 'title' => section.title, 'link_loop' => (render :partial => 'links/link_for_custom_slice', :collection => links.sort_by(&:position), :locals => { :section => section}))
  - elsif section.section_format == "extended"
    %ul.link-list.list_of_links
      - for link in links.sort_by(&:position)
        %li.link
          - unless link.images.blank? 
            =link_to image_tag(link.images.first.thumbnail, :title => link.title, :alt => link.title), [link.link_category, link], :class => "link-image"

          %h3= link_to link.name, [link.link_category, link]
          - if !link.blurb.blank?
            .link-description
              = link.blurb
          .link-more-info
            = link_to("More Info", link)